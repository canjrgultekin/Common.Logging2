version: '3.8'

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - mynetwork
      
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - mynetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - mynetwork
      
  microservice1:
    image: microservice1
    build:
      context: .
      dockerfile: Microservice1/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - kafka
      - jaeger
      - zookeeper
      - elasticsearch
      - kibana
      - otel-collector
    networks:
      - mynetwork
      
  apigateway:
    image: apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - microservice1
      - jaeger
      - kafka
      - zookeeper
      - elasticsearch
      - kibana
      - otel-collector
    networks:
      - mynetwork

  eventpublisher:
    image: eventpublisher
    build:
      context: .
      dockerfile: EventPublisher/Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - kafka
      - jaeger
      - zookeeper
      - elasticsearch
      - kibana
      - otel-collector
    networks:
      - mynetwork
      
  eventsubscriber:
    image: eventsubscriber
    build:
      context: .
      dockerfile: EventSubscriber/Dockerfile
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - jaeger
      - kafka
      - zookeeper
      - elasticsearch
      - kibana
      - otel-collector
    networks:
      - mynetwork
      
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317"
      - "55680:55680"
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config", "/etc/otel-collector-config.yml"]
    networks:
      - mynetwork

  jaeger:
    image: jaegertracing/all-in-one:1.21
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - mynetwork
      
networks:
  mynetwork:
    driver: bridge
    
